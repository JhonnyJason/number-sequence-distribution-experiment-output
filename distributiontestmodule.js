// Generated by CoffeeScript 2.5.1
(function() {
  var babylonFunction, displayByteDistribution, distributiontestmodule, log, olog, ostr, print, testRunBabylon;

  distributiontestmodule = {
    name: "distributiontestmodule"
  };

  //###########################################################
  //region printLogFunctions
  log = function(arg) {
    if (allModules.debugmodule.modulesToDebug["distributiontestmodule"] != null) {
      console.log("[distributiontestmodule]: " + arg);
    }
  };

  ostr = function(obj) {
    return JSON.stringify(obj, null, 4);
  };

  olog = function(obj) {
    return log("\n" + ostr(obj));
  };

  print = function(arg) {
    return console.log(arg);
  };

  //endregion

  //###########################################################
  babylonFunction = null;

  //###########################################################
  distributiontestmodule.initialize = function() {
    log("distributiontestmodule.initialize");
    babylonFunction = allModules.babylonfunctionmodule;
  };

  //###########################################################
  displayByteDistribution = function(numbers) {
    var byteCount, i, len, number;
    byteCount = [];
    byteCount.length = 256;
    byteCount.fill(0);
    for (i = 0, len = numbers.length; i < len; i++) {
      number = numbers[i];
      byteCount[number]++;
    }
    olog({byteCount});
  };

  testRunBabylon = function(start, iterations) {
    var numbers;
    log("testRunBabylon (start: " + start + ", iterations: " + iterations + ")");
    numbers = babylonFunction(start, iterations);
    // olog {start, iterations, numbers}
    log("start: " + start + ", iterations: " + iterations);
    displayByteDistribution(numbers);
  };

  //###########################################################
  distributiontestmodule.runTest = function() {
    log("distributiontestmodule.runTest");
  };

  module.exports = distributiontestmodule;

}).call(this);
